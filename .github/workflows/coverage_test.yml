# Workflow runs simple package installation & unittest.
# All python unittests should be relatively fast (1 core + gam)
name: Code coverage test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'examples/**'
      - 'tutorials/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  basic:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    container:
      image: ulissigroup/kubeflow_vasp:extras-notebook
      env: 
        VASP_PREFIX: "mpirun -np 1 --mca btl_vader_single_copy_mechanism none --mca mpi_cuda_support 0 --allow-run-as-root"
      options: --user root --entrypoint /bin/bash
      credentials:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        vasp-version: ["vasp63"]
        variant: ["patch"]
        

    steps:
    - name: check env
      run: |
        echo "${{ github.workspace }}"
    - uses: actions/checkout@v2
    - name: Download test binaries
      run: |
        wget --no-verbose https://github.com/ulissigroup/vasp-interactive/releases/download/v0.0.1/test_binaries.zip
        unzip -d vasp -P $MYPWD test_binaries.zip 
        VASP_ROOT=`realpath vasp`
        echo "VASP_ROOT=${VASP_ROOT}" >> $GITHUB_ENV
      env:
        MYPWD: ${{ secrets.TEST_BINARY_KEY }}

    - name: setup conda version
      run: |
        conda create --name actions -c conda-forge \
          python=${{ matrix.python-version }} pip flake8 pytest coverage jq
        conda init bash
        source activate actions
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        source activate actions
        which python
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Package install
      run: |
        source activate actions
        python -m pip install --upgrade .
    - name: Unit test
      run: |
        source activate actions
        echo ${VASP_ROOT}
        export VASP_COMMAND="${VASP_PREFIX} ${VASP_ROOT}/${{ matrix.variant }}/${{ matrix.vasp-version }}/bin/vasp_std"
        echo $VASP_COMMAND
        for f in tests/test*.py; do echo $f; coverage run -a -m pytest -s $f; killall vasp_std || echo ""; done
        coverage json --omit=test*
        COVERAGE=`cat coverage.json | jq .totals.percent_covered | xargs printf '%.*f' 0`
        echo "Current coverage is $COVERAGE"
        echo "COV=$COVERAGE" >> $GITHUB_ENV
    - name: Create Awesome Badge
      uses: schneegans/dynamic-badges-action@v1.5.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.COV_BADGE_GIST_ID }}
        filename: vpi_coverage.json
        label: Code Coverage
        message: ${{ env.COV }}%
        color: yellowgreen
