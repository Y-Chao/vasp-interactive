# Makefile.include for VASP6 with PGI compiler
# The include and library paths are specific to NVHPC SDK images

# Precompiler options
CPP_OPTIONS= -DHOST=\"LinuxPGI\" \
             -DMPI -DMPI_BLOCK=8000 -DMPI_INPLACE -Duse_collective \
             -DscaLAPACK \
             -DCACHE_SIZE=4000 \
             -Davoidalloc \
             -Dvasp6 \
             -Duse_bse_te \
             -Dtbdyn \
             -Dqd_emulate \
             -Dfock_dblbuf

CPP        = pgfortran -Mpreprocess -Mfree -Mextend -E $(CPP_OPTIONS) $*$(FUFFIX)  > $*$(SUFFIX)



# Use PGI provided BLAS and LAPACK libraries
#BLAS       = -lblas
#LAPACK     = -llapack
MKLROOT = /opt/intel/compilers_and_libraries/linux/mkl
MKL_PATH = $(MKLROOT)/lib/intel64
#SCALAPACK  = -L/usr/lib -lscalapack-openmpi $(BLACS)

#BLACS      = -lmkl_blacs_openmpi_lp64
#SCALAPACK  = $(MKL_PATH)/libmkl_scalapack_lp64.a $(BLACS)
#LLIBS      = $(SCALAPACK) $(LAPACK) $(BLAS)
#LLIBS      += -L${MKLROOT}/lib/intel64 -Wl,--no-as-needed -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl -lmkl_blacs_openmpi_lp64 -lmkl_scalapack_lp64

LLIBS      += -L${MKLROOT}/lib/intel64 -Wl,--no-as-needed -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_openmpi_lp64 -lpthread -lm -ldl

FC         = mpif90  -I$(MKLROOT)/include
FCL        = mpif90  -pgc++libs -I$(MKLROOT)/include

FREE       = -Mfree
FFLAGS     = -Mnoupcase -Mbackslash -Mlarge_arrays

OFLAG      = -O2
DEBUG      = -O0 -traceback


# Software emulation of quadruple precsion
QD         ?= /opt/nvidia/hpc_sdk/Linux_x86_64/$(HPCSDK_VERSION)/compilers/extras/qd/
LLIBS      += -L$(QD)/lib -lqdmod -lqd
INCS       += -I$(QD)/include/qd

# Use the FFTs from fftw
#FFTW       ?= /opt/pgi/fftw-3.3.8
#LLIBS      += -L$(FFTW)/lib -lfftw3 
#INCS       += -I$(FFTW)/include
INCS       +=-I$(MKLROOT)/include/fftw
#LLIBS      +=-L$(MKL_PATH)

OBJECTS    = fftmpiw.o fftmpi_map.o fftw3d.o fft3dlib.o

# Redefine the standard list of O1 and O2 objects
SOURCE_O1  := pade_fit.o
SOURCE_O2  := pead.o

# For what used to be vasp.5.lib
CPP_LIB    = $(CPP)
FC_LIB     = pgfortran
CC_LIB     = pgcc
CFLAGS_LIB = -O
FFLAGS_LIB = -O1 -Mfixed
FREE_LIB   = $(FREE)

OBJECTS_LIB= linpack_double.o getshmem.o

# For the parser library
CXX_PARS   = pgc++ --no_warnings

# Normally no need to change this
SRCDIR     = ../../src
BINDIR     = ../../bin

#================================================
# GPU Stuff

CPP_GPU    = -DCUDA_GPU -DRPROMU_CPROJ_OVERLAP -DCUFFT_MIN=28 -UscaLAPACK -Ufock_dblbuf # -DUSE_PINNED_MEMORY 

OBJECTS_GPU= fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d_gpu.o fftmpiw_gpu.o

CC         = pgcc
CXX        = pgc++
CFLAGS     = -fPIC -DADD_ -mp -DMAGMA_WITH_MKL -DMAGMA_SETAFFINITY -DGPUSHMEM=300 -DHAVE_CUBLAS

CUDA_ROOT  ?= /usr/local/cuda
NVCC       := $(CUDA_ROOT)/bin/nvcc
CUDA_LIB   := -L$(CUDA_ROOT)/lib64 -lnvToolsExt -lcudart -lcuda -lcufft -lcublas

GENCODE_ARCH    := -gencode=arch=compute_30,code=\"sm_30,compute_30\" \
                   -gencode=arch=compute_35,code=\"sm_35,compute_35\" \
                   -gencode=arch=compute_60,code=\"sm_60,compute_60\" \
                   -gencode=arch=compute_70,code=\"sm_70,compute_70\" \
                   -gencode=arch=compute_72,code=\"sm_72,compute_72\"

MPI_INC    = /opt/nvidia/hpc_sdk/Linux_x86_64/20.11/comm_libs/mpi/include
